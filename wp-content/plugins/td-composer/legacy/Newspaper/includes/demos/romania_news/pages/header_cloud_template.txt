{"tdc_header_desktop":"[tdc_zone type=\"tdc_header_desktop\" tdc_css=\"eyJhbGwiOnsiYmFja2dyb3VuZC1jb2xvciI6IiNmZmZmZmYiLCJ6LWluZGV4IjoiMiIsImRpc3BsYXkiOiIifX0=\" h_display=\"\" h_position=\"\" zone_shadow_shadow_offset_horizontal=\"0\"][vc_row tdc_css=\"eyJhbGwiOnsicGFkZGluZy1yaWdodCI6IjIwIiwicGFkZGluZy1sZWZ0IjoiMjAiLCJiYWNrZ3JvdW5kLWNvbG9yIjoiIzAwMDAwMCIsInotaW5kZXgiOiIxMDAwIiwiZGlzcGxheSI6IiJ9LCJwb3J0cmFpdCI6eyJkaXNwbGF5IjoiIn0sInBvcnRyYWl0X21heF93aWR0aCI6MTAxOCwicG9ydHJhaXRfbWluX3dpZHRoIjo3Njh9\" full_width=\"stretch_row_content td-stretch-content\" content_align_vertical=\"content-vert-top\" row_shadow_shadow_size=\"2\" row_shadow_shadow_offset_vertical=\"2\" row_shadow_shadow_color=\"rgba(10,0,0,0.15)\"][vc_column vertical_align=\"\"][tdb_header_weather temp_color=\"#ffffff\" loc_color=\"#ffffff\" api=\"0996704ddd5903ca0b170c5f1927fe16\" location=\"Alba Iulia\" inline=\"yes\" icon_color=\"#ffffff\" f_temp_font_family=\"712\" f_unit_font_family=\"712\" f_loc_font_family=\"712\" f_temp_font_weight=\"400\" f_unit_font_weight=\"400\" f_loc_font_weight=\"400\" tdc_css=\"eyJhbGwiOnsibWFyZ2luLXJpZ2h0IjoiMzAiLCJkaXNwbGF5IjoiIn0sImxhbmRzY2FwZSI6eyJtYXJnaW4tcmlnaHQiOiIxNCIsImRpc3BsYXkiOiIifSwibGFuZHNjYXBlX21heF93aWR0aCI6MTE0MCwibGFuZHNjYXBlX21pbl93aWR0aCI6MTAxOSwicG9ydHJhaXQiOnsibWFyZ2luLXJpZ2h0IjoiMTQiLCJkaXNwbGF5IjoiIn0sInBvcnRyYWl0X21heF93aWR0aCI6MTAxOCwicG9ydHJhaXRfbWluX3dpZHRoIjo3Njh9\" f_temp_font_size=\"eyJhbGwiOiIxMyIsImxhbmRzY2FwZSI6IjExIiwicG9ydHJhaXQiOiIxMSJ9\" f_loc_font_size=\"eyJhbGwiOiIxMyIsImxhbmRzY2FwZSI6IjExIiwicG9ydHJhaXQiOiIxMSJ9\" f_loc_font_line_height=\"eyJhbGwiOiI0NHB4IiwibGFuZHNjYXBlIjoiMzFweCIsInBvcnRyYWl0IjoiMzFweCJ9\" icon_size=\"eyJsYW5kc2NhcGUiOiIxNiJ9\" icon_space=\"eyJsYW5kc2NhcGUiOiI0In0=\"][tdb_header_date inline=\"yes\" date_color=\"#ffffff\" f_date_font_family=\"712\" f_date_font_weight=\"400\" f_date_font_size=\"eyJhbGwiOiIxMyIsImxhbmRzY2FwZSI6IjExIiwicG9ydHJhaXQiOiIxMSJ9\" tdc_css=\"eyJhbGwiOnsibWFyZ2luLXJpZ2h0IjoiMzAiLCJkaXNwbGF5IjoiIn0sImxhbmRzY2FwZSI6eyJtYXJnaW4tcmlnaHQiOiIxNCIsImRpc3BsYXkiOiIifSwibGFuZHNjYXBlX21heF93aWR0aCI6MTE0MCwibGFuZHNjYXBlX21pbl93aWR0aCI6MTAxOSwicG9ydHJhaXQiOnsibWFyZ2luLXJpZ2h0IjoiMCIsImRpc3BsYXkiOiIifSwicG9ydHJhaXRfbWF4X3dpZHRoIjoxMDE4LCJwb3J0cmFpdF9taW5fd2lkdGgiOjc2OH0=\" f_date_font_line_height=\"eyJhbGwiOiI0NHB4IiwibGFuZHNjYXBlIjoiMzFweCIsInBvcnRyYWl0IjoiMzFweCJ9\"][tdb_mobile_horiz_menu inline=\"yes\" menu_id=\"ddd_td-demo-top-menu_ddd\" text_color=\"#ffffff\" align_horiz=\"content-horiz-left\" f_elem_font_family=\"712\" f_elem_font_weight=\"400\" f_elem_font_size=\"eyJhbGwiOiIxMyIsImxhbmRzY2FwZSI6IjExIn0=\" f_elem_font_line_height=\"eyJhbGwiOiI0NHB4IiwibGFuZHNjYXBlIjoiMzFweCJ9\" text_color_h=\"#266fef\" show_subcat=\"yes\" f_sub_elem_font_family=\"712\" sub_text_color_h=\"#266fef\" main_sub_tdicon=\"td-icon-down\" main_sub_icon_align=\"1\" elem_padd=\"eyJsYW5kc2NhcGUiOiIwIDhweCJ9\" tdc_css=\"eyJwb3J0cmFpdCI6eyJkaXNwbGF5Ijoibm9uZSJ9LCJwb3J0cmFpdF9tYXhfd2lkdGgiOjEwMTgsInBvcnRyYWl0X21pbl93aWR0aCI6NzY4fQ==\"][tdb_header_user inline=\"yes\" log_ico_color=\"#ffffff\" show_log=\"\" login_tdicon=\"td-icon-user\" icon_space=\"eyJhbGwiOiIxMCIsInBvcnRyYWl0IjoiNSIsImxhbmRzY2FwZSI6IjUifQ==\" icon_size=\"eyJhbGwiOiIxMyIsImxhbmRzY2FwZSI6IjEyIiwicG9ydHJhaXQiOiIxMiJ9\" f_usr_font_family=\"712\" f_log_font_family=\"712\" f_usr_font_size=\"eyJhbGwiOiIxMyIsInBvcnRyYWl0IjoiMTEiLCJsYW5kc2NhcGUiOiIxMSJ9\" f_log_font_size=\"eyJhbGwiOiIxMyIsInBvcnRyYWl0IjoiMTEiLCJsYW5kc2NhcGUiOiIxMSJ9\" f_log_font_transform=\"\" f_log_font_weight=\"400\" usr_color_h=\"#266fef\" log_color_h=\"#266fef\" tdc_css=\"eyJhbGwiOnsibWFyZ2luLWxlZnQiOiIzMCIsImRpc3BsYXkiOiIifSwicG9ydHJhaXQiOnsibWFyZ2luLWxlZnQiOiIxNCIsImRpc3BsYXkiOiIifSwicG9ydHJhaXRfbWF4X3dpZHRoIjoxMDE4LCJwb3J0cmFpdF9taW5fd2lkdGgiOjc2OCwibGFuZHNjYXBlIjp7Im1hcmdpbi10b3AiOiIxIiwibWFyZ2luLWxlZnQiOiIxNCIsImRpc3BsYXkiOiIifSwibGFuZHNjYXBlX21heF93aWR0aCI6MTE0MCwibGFuZHNjYXBlX21pbl93aWR0aCI6MTAxOX0=\" f_usr_font_weight=\"400\" f_log_font_line_height=\"eyJhbGwiOiI0NHB4IiwicG9ydHJhaXQiOiIzMXB4IiwibGFuZHNjYXBlIjoiMzFweCJ9\" f_usr_font_line_height=\"eyJhbGwiOiI0NHB4IiwicG9ydHJhaXQiOiIzMXB4IiwibGFuZHNjYXBlIjoiMzFweCJ9\" float_right=\"yes\" f_usr_font_transform=\"\" photo_radius=\"50\" photo_space=\"10\" links_space=\"eyJhbGwiOiIxMCIsImxhbmRzY2FwZSI6IjUiLCJwb3J0cmFpdCI6IjUifQ==\" log_color=\"#ffffff\" usr_color=\"#ffffff\" logout_tdicon=\"td-icon-vertical-line\"][tdm_block_socials facebook=\"#\" twitter=\"#\" instagram=\"#\" tds_social=\"tds_social1\" icons_size=\"eyJhbGwiOiIxNiIsInBvcnRyYWl0IjoiMTIiLCJsYW5kc2NhcGUiOiIxMiJ9\" icons_padding=\"eyJhbGwiOiIyLjYiLCJwb3J0cmFpdCI6IjIuNiJ9\" display_inline=\"yes\" tdc_css=\"eyJhbGwiOnsibWFyZ2luLXRvcCI6IjIiLCJkaXNwbGF5IjoiIn0sImxhbmRzY2FwZSI6eyJkaXNwbGF5IjoiIn0sImxhbmRzY2FwZV9tYXhfd2lkdGgiOjExNDAsImxhbmRzY2FwZV9taW5fd2lkdGgiOjEwMTksInBvcnRyYWl0Ijp7Im1hcmdpbi10b3AiOiIwIiwiZGlzcGxheSI6IiJ9LCJwb3J0cmFpdF9tYXhfd2lkdGgiOjEwMTgsInBvcnRyYWl0X21pbl93aWR0aCI6NzY4fQ==\" float_right=\"yes\" tds_social1-icons_hover_color=\"#266fef\" show_names=\"\" icons_spacing=\"0\" tds_social1-icons_color=\"#ffffff\" youtube=\"#\"][/vc_column][/vc_row][vc_row full_width=\"stretch_row_1200 td-stretch-content\" tdc_css=\"eyJhbGwiOnsiYmFja2dyb3VuZC1jb2xvciI6IiNmOWY5ZjkiLCJiYWNrZ3JvdW5kLWltYWdlIjoidXJsKFwiaHR0cDovLzE5Mi4xNjguMC40MC93cF8wMTFfcm9tYW5pYV9uZXdzL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzA2L3h4eF9tZW51LWJnX3h4eC5qcGdcIikiLCJiYWNrZ3JvdW5kLXBvc2l0aW9uIjoiY2VudGVyIGNlbnRlciIsImRpc3BsYXkiOiIifSwibGFuZHNjYXBlIjp7ImRpc3BsYXkiOiIifSwibGFuZHNjYXBlX21heF93aWR0aCI6MTE0MCwibGFuZHNjYXBlX21pbl93aWR0aCI6MTAxOSwicG9ydHJhaXQiOnsiZGlzcGxheSI6IiJ9LCJwb3J0cmFpdF9tYXhfd2lkdGgiOjEwMTgsInBvcnRyYWl0X21pbl93aWR0aCI6NzY4fQ==\" row_divider_bottom=\"\" svg_background_color_bottom=\"#ffffff\" row_anim_off=\"yes\"][vc_column][vc_row_inner gap=\"0\" tdc_css=\"eyJhbGwiOnsicGFkZGluZy10b3AiOiI0MCIsInBhZGRpbmctcmlnaHQiOiIxNSIsInBhZGRpbmctYm90dG9tIjoiNTAiLCJwYWRkaW5nLWxlZnQiOiIxNSIsImRpc3BsYXkiOiIifSwibGFuZHNjYXBlIjp7InBhZGRpbmctdG9wIjoiNDAiLCJwYWRkaW5nLWJvdHRvbSI6IjQ0IiwiZGlzcGxheSI6IiJ9LCJsYW5kc2NhcGVfbWF4X3dpZHRoIjoxMTQwLCJsYW5kc2NhcGVfbWluX3dpZHRoIjoxMDE5LCJwb3J0cmFpdCI6eyJwYWRkaW5nLXRvcCI6IjMwIiwicGFkZGluZy1ib3R0b20iOiIzNCIsImRpc3BsYXkiOiIifSwicG9ydHJhaXRfbWF4X3dpZHRoIjoxMDE4LCJwb3J0cmFpdF9taW5fd2lkdGgiOjc2OH0=\"][vc_column_inner][tdb_header_logo tagline=\"bmV3cw==\" align_vert=\"content-vert-center\" tagline_pos=\"inline\" tagline_align_vert=\"content-vert-center\" f_tagline_font_family=\"712\" f_tagline_font_line_height=\"1\" f_text_font_size=\"eyJhbGwiOiI0MCIsInBvcnRyYWl0IjoiMzAifQ==\" f_tagline_font_size=\"eyJhbGwiOiI0MCIsInBvcnRyYWl0IjoiMzAifQ==\" f_text_font_family=\"712\" f_text_font_weight=\"400\" f_tagline_font_weight=\"300\" icon_pos=\"\" text=\"romania\" tagline_align_horiz=\"content-horiz-left\" show_tagline=\"\" f_text_font_line_height=\"1\" f_text_font_style=\"\" f_text_font_transform=\"\" f_tagline_font_transform=\"\" align_horiz=\"content-horiz-left\" text_color=\"#ffffff\" tagline_color=\"rgba(255,255,255,0.7)\" f_text_font_spacing=\"-1\" f_tagline_font_spacing=\"-1\" tdicon=\"td-icon-xing\" icon_color=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjZmYwMDAwIiwiY29sb3IyIjoiIzFlNzNiZSIsIm1peGVkQ29sb3JzIjpbeyJjb2xvciI6IiMxZTczYmUiLCJwZXJjZW50YWdlIjozNH0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjozNX0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjo2N30seyJjb2xvciI6IiNkZDMzMzMiLCJwZXJjZW50YWdlIjo2N31dLCJkZWdyZWUiOiIwIiwiY3NzIjoiYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoMGRlZywjMWU3M2JlLCMxZTczYmUgMzQlLCNlZWVlMjIgMzUlLCNlZWVlMjIgNjclLCNkZDMzMzMgNjclLCNmZjAwMDApO2JhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCMxZTczYmUsIzFlNzNiZSAzNCUsI2VlZWUyMiAzNSUsI2VlZWUyMiA2NyUsI2RkMzMzMyA2NyUsI2ZmMDAwMCk7IiwiY3NzUGFyYW1zIjoiMGRlZywjMWU3M2JlLCMxZTczYmUgMzQlLCNlZWVlMjIgMzUlLCNlZWVlMjIgNjclLCNkZDMzMzMgNjclLCNmZjAwMDAifQ==\" icon_align=\"3\" icon_size=\"eyJwb3J0cmFpdCI6IjM2In0=\" show_image=\"none\"][/vc_column_inner][/vc_row_inner][vc_row_inner tdc_css=\"eyJhbGwiOnsibWFyZ2luLWJvdHRvbSI6Ii0yNSIsImJvcmRlci1jb2xvciI6IiMwMDAwMDAiLCJiYWNrZ3JvdW5kLWNvbG9yIjoiI2ZmZmZmZiIsImRpc3BsYXkiOiIifSwibGFuZHNjYXBlIjp7Im1hcmdpbi1ib3R0b20iOiIwIiwiZGlzcGxheSI6IiJ9LCJsYW5kc2NhcGVfbWF4X3dpZHRoIjoxMTQwLCJsYW5kc2NhcGVfbWluX3dpZHRoIjoxMDE5LCJwb3J0cmFpdCI6eyJtYXJnaW4tYm90dG9tIjoiMCIsImRpc3BsYXkiOiIifSwicG9ydHJhaXRfbWF4X3dpZHRoIjoxMDE4LCJwb3J0cmFpdF9taW5fd2lkdGgiOjc2OH0=\" row_shadow_shadow_size=\"3\" row_shadow_shadow_offset_vertical=\"3\"][vc_column_inner][tdb_header_menu sub_tdicon=\"td-icon-right\" mm_align_horiz=\"content-horiz-center\" modules_on_row_regular=\"20%\" modules_on_row_cats=\"25%\" image_size=\"\" modules_category=\"above\" show_excerpt=\"none\" show_com=\"none\" show_date=\"\" show_author=\"eyJwb3J0cmFpdCI6Im5vbmUifQ==\" mm_sub_align_horiz=\"content-horiz-right\" mm_elem_align_horiz=\"content-horiz-right\" inline=\"yes\" tds_menu_active1-line_height=\"0\" menu_id=\"ddd_td-demo-header-menu_ddd\" f_elem_font_family=\"712\" f_elem_font_weight=\"500\" f_elem_font_size=\"eyJhbGwiOiIxNiIsInBvcnRyYWl0IjoiMTMiLCJsYW5kc2NhcGUiOiIxNSJ9\" elem_padd=\"eyJhbGwiOiIwIDE0cHgiLCJsYW5kc2NhcGUiOiIwIDEwcHgiLCJwb3J0cmFpdCI6IjAgMTBweCJ9\" mm_align_screen=\"yes\" f_title_font_family=\"712\" f_title_font_weight=\"\" f_ex_font_family=\"\" f_title_font_size=\"eyJhbGwiOiIxNiIsInBvcnRyYWl0IjoiMTMiLCJsYW5kc2NhcGUiOiIxNCJ9\" image_height=\"66\" m_bg=\"#ffffff\" art_title=\"eyJwb3J0cmFpdCI6IjJweCAwIDZweCAwIiwiYWxsIjoiMXB4IDAgNHB4IDAifQ==\" h_effect=\"\" meta_info_horiz=\"content-horiz-left\" f_sub_elem_font_family=\"712\" f_mm_sub_font_family=\"712\" mm_elem_color_a=\"#266fef\" title_txt_hover=\"#266fef\" tds_menu_sub_active1-sub_text_color_h=\"#266fef\" f_sub_elem_font_transform=\"\" f_sub_elem_font_size=\"eyJhbGwiOiIxMyIsInBvcnRyYWl0IjoiMTEifQ==\" f_sub_elem_font_weight=\"\" sub_elem_padd=\"eyJhbGwiOiI0cHggMjhweCIsInBvcnRyYWl0IjoiNHB4IDI2cHgifQ==\" mm_subcats_border_color=\"rgba(10,0,0,0.05)\" mm_elem_bg=\"rgba(0,0,0,0)\" mm_elem_bg_a=\"rgba(0,0,0,0)\" mm_elem_border_color_a=\"rgba(0,0,0,0)\" pag_h_bg=\"#266fef\" pag_h_border=\"#266fef\" f_elem_font_line_height=\"eyJhbGwiOiI2MXB4IiwibGFuZHNjYXBlIjoiNTFweCIsInBvcnRyYWl0IjoiNTFweCJ9\" f_title_font_transform=\"\" f_mm_sub_font_size=\"eyJsYW5kc2NhcGUiOiIxMSIsImFsbCI6IjEzIiwicG9ydHJhaXQiOiIxMSJ9\" mm_elem_padd=\"eyJwb3J0cmFpdCI6IjAgMjJweCIsImFsbCI6IjJweCAyMnB4In0=\" mm_sub_width=\"eyJsYW5kc2NhcGUiOiIxOTAiLCJwb3J0cmFpdCI6IjEyMCJ9\" modules_gap=\"eyJwb3J0cmFpdCI6IjE1IiwiYWxsIjoiMjAiLCJsYW5kc2NhcGUiOiIyMCJ9\" mm_padd=\"eyJwb3J0cmFpdCI6IjE1IiwiYWxsIjoiMzAiLCJsYW5kc2NhcGUiOiIyMCJ9\" mm_sub_padd=\"eyJwb3J0cmFpdCI6IjE1cHggMCJ9\" main_sub_icon_space=\"eyJwb3J0cmFpdCI6IjcifQ==\" tds_menu_sub_active1-sub_elem_bg_color_h=\"rgba(2,75,107,0.05)\" tdc_css=\"eyJhbGwiOnsiZGlzcGxheSI6IiJ9LCJwb3J0cmFpdCI6eyJtYXJnaW4tdG9wIjoiMSIsImRpc3BsYXkiOiIifSwicG9ydHJhaXRfbWF4X3dpZHRoIjoxMDE4LCJwb3J0cmFpdF9taW5fd2lkdGgiOjc2OH0=\" f_title_font_line_height=\"1.2\" tds_menu_sub_active=\"tds_menu_sub_active1\" sub_shadow_shadow_offset_horizontal=\"0\" main_sub_tdicon=\"td-icon-menu-down\" sep_color=\"#ebebeb\" f_cat_font_family=\"712\" f_cat_font_weight=\"400\" f_cat_font_transform=\"\" f_cat_font_size=\"11\" modules_category_padding=\"6px 0\" f_meta_font_family=\"712\" f_meta_font_weight=\"400\" f_meta_font_size=\"11\" mm_shadow_shadow_size=\"0\" mm_shadow_shadow_offset_vertical=\"0\" f_mm_sub_font_weight=\"400\" f_mm_sub_font_transform=\"\" mm_elem_color=\"#000000\" sub_shadow_shadow_size=\"1\" sub_align_horiz=\"content-horiz-left\" sub_icon_pos=\"\" sub_icon_space=\"7\" sub_icon_size=\"10\" sub_shadow_shadow_color=\"rgba(0,0,0,0.14)\" f_elem_font_transform=\"none\" tds_menu_active=\"tds_menu_active1\" title_txt=\"#051d2d\" mm_width=\"1402\" f_cat_font_line_height=\"1\" sub_padd=\"18px 0\" sub_text_color=\"#919191\" sub_rest_top=\"-18\" main_sub_icon_size=\"eyJhbGwiOiIxMCIsImxhbmRzY2FwZSI6IjgiLCJwb3J0cmFpdCI6IjYifQ==\" main_sub_icon_align=\"0\" sub_icon_align=\"eyJhbGwiOjIsInBvcnRyYWl0IjoiMyJ9\" show_cat=\"\" cat_bg=\"rgba(0,0,0,0)\" cat_txt=\"#666666\" mm_subcats_bg=\"#ffffff\" cat_txt_hover=\"#000000\" author_txt=\"#666666\" author_txt_hover=\"#000000\" tds_menu_active1-text_color_h=\"#266fef\" sub_shadow_shadow_offset_vertical=\"0\"][tdb_header_search results_msg_align=\"content-horiz-center\" image_floated=\"float_left\" image_size=\"td_324x400\" show_btn=\"none\" show_date=\"\" show_review=\"none\" show_com=\"none\" show_excerpt=\"none\" show_author=\"\" meta_padding=\"0 0 0 16px\" all_modules_space=\"eyJhbGwiOiIxMHB4IiwibGFuZHNjYXBlIjoiMTBweCIsInBvcnRyYWl0IjoiMTBweCJ9\" form_padding=\"eyJhbGwiOiIzMHB4IiwibGFuZHNjYXBlIjoiMjBweCIsInBvcnRyYWl0IjoiMjBweCJ9\" form_border=\"0\" form_align=\"content-horiz-right\" results_padding=\"eyJhbGwiOiIwIDMwcHggMzBweCIsImxhbmRzY2FwZSI6IjAgMjBweCAyMHB4ICIsInBvcnRyYWl0IjoiMCAyMHB4IDIwcHgifQ==\" results_border=\"0 0 1px 0\" results_msg_padding=\"eyJhbGwiOiIxMHB4IDAiLCJsYW5kc2NhcGUiOiI2cHggMCIsInBvcnRyYWl0IjoiNHB4IDAifQ==\" modules_divider=\"\" modules_divider_color=\"rgba(127,127,127,0.1)\" h_effect=\"\" image_height=\"100\" meta_info_horiz=\"content-horiz-left\" meta_info_align=\"\" results_msg_color=\"#266fef\" f_title_font_size=\"14\" f_title_font_weight=\"500\" modules_category=\"above\" mc1_el=\"16\" f_title_font_line_height=\"1.2\" btn_tdicon=\"tdc-font-tdmp tdc-font-tdmp-arrow-cut-right\" btn_icon_size=\"12\" btn_padding=\"eyJhbGwiOiI4cHggMTZweCIsInBvcnRyYWl0IjoiNnB4IDE2cHgifQ==\" btn_icon_space=\"10\" input_border_color=\"rgba(0,0,0,0.05)\" btn_shadow_shadow_color=\"rgba(0,0,0,0.39)\" btn_icon_pos=\"after\" inline=\"yes\" input_padding=\"0\" title_txt_hover=\"#266fef\" form_width=\"700\" f_input_font_family=\"712\" f_placeholder_font_family=\"712\" f_title_font_family=\"712\" f_title_font_transform=\"\" f_btn_font_family=\"712\" f_btn_font_transform=\"\" f_btn_font_weight=\"400\" cat_txt_hover=\"#000000\" image_width=\"27\" tdicon=\"td-icon-magnifier-big-rounded\" icon_color_h=\"#266fef\" arrow_color=\"#d6d6d6\" ex_txt=\"#a5a5a5\" mc1_tl=\"16\" toggle_txt_pos=\"\" toggle_txt_color=\"#000000\" icon_padding=\"eyJhbGwiOjMsImxhbmRzY2FwZSI6IjMuMiIsInBvcnRyYWl0IjoiMy4yIn0=\" btn_bg_h=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjMTEwMDIxIiwiY29sb3IyIjoiIzA2MjYzYSIsIm1peGVkQ29sb3JzIjpbXSwiZGVncmVlIjoiLTMwIiwiY3NzIjoiYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoLTMwZGVnLCMwNjI2M2EsIzExMDAyMSk7YmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KC0zMGRlZywjMDYyNjNhLCMxMTAwMjEpOyIsImNzc1BhcmFtcyI6Ii0zMGRlZywjMDYyNjNhLCMxMTAwMjEifQ==\" form_shadow_shadow_size=\"1\" form_shadow_shadow_offset_vertical=\"0\" form_shadow_shadow_color=\"rgba(0,0,0,0.11)\" f_cat_font_family=\"712\" f_cat_font_weight=\"400\" f_cat_font_transform=\"\" f_meta_font_weight=\"400\" f_meta_font_family=\"712\" modules_category_padding=\"0 0 6px\" input_placeholder=\"type here...\" input_border=\"0 0 2px 0\" f_results_msg_font_family=\"712\" f_results_msg_font_transform=\"\" f_results_msg_font_weight=\"\" f_results_msg_font_style=\"normal\" f_placeholder_font_size=\"14\" f_placeholder_font_weight=\"400\" f_btn_font_size=\"14\" image_alignment=\"20\" f_input_font_size=\"14\" f_input_font_weight=\"400\" placeholder_opacity=\"0.01\" icon_size=\"eyJhbGwiOiIyMCIsInBvcnRyYWl0IjoiMTYiLCJsYW5kc2NhcGUiOiIxNiJ9\" float_block=\"yes\" title_txt=\"#051d2d\" cat_bg=\"rgba(0,0,0,0)\" f_ex_font_family=\"\" f_meta_font_size=\"11\" art_title=\"0 0 2px\" f_cat_font_size=\"11\" tdc_css=\"eyJwb3J0cmFpdCI6eyJtYXJnaW4tdG9wIjoiMSIsImRpc3BsYXkiOiIifSwicG9ydHJhaXRfbWF4X3dpZHRoIjoxMDE4LCJwb3J0cmFpdF9taW5fd2lkdGgiOjc2OH0=\" icon_color=\"#000000\" show_form=\"yes\" form_offset=\"1\" f_cat_font_line_height=\"1\" btn_bg=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjMjY2ZmVmIiwiY29sb3IyIjoiIzAwNGNmZiIsIm1peGVkQ29sb3JzIjpbXSwiY3NzIjoiYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoMGRlZywjMDA0Y2ZmLCMyNjZmZWYpO2JhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCMwMDRjZmYsIzI2NmZlZik7IiwiY3NzUGFyYW1zIjoiMGRlZywjMDA0Y2ZmLCMyNjZmZWYifQ==\" cat_txt=\"#666666\" modules_on_row=\"50%\" results_limit=\"6\" results_msg_color_h=\"#266fef\" author_txt=\"#666666\" author_txt_hover=\"#000000\"][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][/tdc_zone]","tdc_header_desktop_sticky":"[tdc_zone type=\"tdc_header_desktop_sticky\" hs_transition_effect=\"slide\" ms_transition_effect=\"slide\" tdc_css=\"eyJhbGwiOnsiYmFja2dyb3VuZC1jb2xvciI6IiNmZmZmZmYiLCJkaXNwbGF5IjoiIn19\" zone_shadow_shadow_size=\"2\" zone_shadow_shadow_offset_vertical=\"4\"][vc_row row_bg_gradient=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjZmYwMDAwIiwiY29sb3IyIjoiIzFlNzNiZSIsIm1peGVkQ29sb3JzIjpbeyJjb2xvciI6IiMxZTczYmUiLCJwZXJjZW50YWdlIjozNH0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjozNH0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjo2N30seyJjb2xvciI6IiNkZDMzMzMiLCJwZXJjZW50YWdlIjo2N31dLCJkZWdyZWUiOiItOTAiLCJjc3MiOiJiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgtOTBkZWcsIzFlNzNiZSwjMWU3M2JlIDM0JSwjZWVlZTIyIDM0JSwjZWVlZTIyIDY3JSwjZGQzMzMzIDY3JSwjZmYwMDAwKTtiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTkwZGVnLCMxZTczYmUsIzFlNzNiZSAzNCUsI2VlZWUyMiAzNCUsI2VlZWUyMiA2NyUsI2RkMzMzMyA2NyUsI2ZmMDAwMCk7IiwiY3NzUGFyYW1zIjoiLTkwZGVnLCMxZTczYmUsIzFlNzNiZSAzNCUsI2VlZWUyMiAzNCUsI2VlZWUyMiA2NyUsI2RkMzMzMyA2NyUsI2ZmMDAwMCJ9\" full_width=\"stretch_row_content td-stretch-content\"][vc_column][vc_empty_space height=\"4px\"][/vc_column][/vc_row][vc_row full_width=\"stretch_row_1400 td-stretch-content\"][vc_column][tdb_header_logo tagline=\"bmV3cw==\" align_vert=\"content-vert-center\" tagline_pos=\"eyJhbGwiOiJpbmxpbmUiLCJwb3J0cmFpdCI6IiJ9\" tagline_align_vert=\"content-vert-center\" f_tagline_font_family=\"712\" f_tagline_font_line_height=\"eyJhbGwiOiI0OHB4IiwicG9ydHJhaXQiOiIxMHB4In0=\" f_text_font_size=\"eyJhbGwiOiIyNCIsInBvcnRyYWl0IjoiMTYiLCJsYW5kc2NhcGUiOiIxOCJ9\" f_tagline_font_size=\"eyJhbGwiOiIyNCIsInBvcnRyYWl0IjoiMTYiLCJsYW5kc2NhcGUiOiIxOCJ9\" f_text_font_family=\"712\" f_text_font_weight=\"400\" f_tagline_font_weight=\"300\" icon_pos=\"\" text=\"romania\" tagline_align_horiz=\"content-horiz-left\" show_tagline=\"\" f_text_font_line_height=\"eyJhbGwiOiI0OHB4IiwicG9ydHJhaXQiOiIxMHB4In0=\" f_text_font_style=\"\" f_text_font_transform=\"\" f_tagline_font_transform=\"\" align_horiz=\"content-horiz-left\" f_text_font_spacing=\"-1\" f_tagline_font_spacing=\"-1\" tdicon=\"td-icon-xing\" icon_color=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjZmYwMDAwIiwiY29sb3IyIjoiIzFlNzNiZSIsIm1peGVkQ29sb3JzIjpbeyJjb2xvciI6IiMxZTczYmUiLCJwZXJjZW50YWdlIjozNH0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjozNX0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjo2N30seyJjb2xvciI6IiNkZDMzMzMiLCJwZXJjZW50YWdlIjo2N31dLCJkZWdyZWUiOiIwIiwiY3NzIjoiYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoMGRlZywjMWU3M2JlLCMxZTczYmUgMzQlLCNlZWVlMjIgMzUlLCNlZWVlMjIgNjclLCNkZDMzMzMgNjclLCNmZjAwMDApO2JhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCMxZTczYmUsIzFlNzNiZSAzNCUsI2VlZWUyMiAzNSUsI2VlZWUyMiA2NyUsI2RkMzMzMyA2NyUsI2ZmMDAwMCk7IiwiY3NzUGFyYW1zIjoiMGRlZywjMWU3M2JlLCMxZTczYmUgMzQlLCNlZWVlMjIgMzUlLCNlZWVlMjIgNjclLCNkZDMzMzMgNjclLCNmZjAwMDAifQ==\" icon_align=\"eyJhbGwiOjMsInBvcnRyYWl0IjoiMCIsImxhbmRzY2FwZSI6IjEifQ==\" icon_size=\"eyJwb3J0cmFpdCI6IjI4IiwiYWxsIjoiMzAiLCJsYW5kc2NhcGUiOiIyNCJ9\" inline=\"yes\" tdc_css=\"eyJhbGwiOnsibWFyZ2luLXRvcCI6Ii00IiwibWFyZ2luLXJpZ2h0IjoiMTAiLCJkaXNwbGF5IjoiIn0sImxhbmRzY2FwZSI6eyJtYXJnaW4tdG9wIjoiLTMiLCJkaXNwbGF5IjoiIn0sImxhbmRzY2FwZV9tYXhfd2lkdGgiOjExNDAsImxhbmRzY2FwZV9taW5fd2lkdGgiOjEwMTksInBvcnRyYWl0Ijp7Im1hcmdpbi10b3AiOiIwIiwiZGlzcGxheSI6IiJ9LCJwb3J0cmFpdF9tYXhfd2lkdGgiOjEwMTgsInBvcnRyYWl0X21pbl93aWR0aCI6NzY4fQ==\" icon_space=\"eyJwb3J0cmFpdCI6IjUifQ==\" show_image=\"none\"][tdb_header_menu sub_tdicon=\"td-icon-right\" mm_align_horiz=\"content-horiz-center\" modules_on_row_regular=\"20%\" modules_on_row_cats=\"25%\" image_size=\"\" modules_category=\"above\" show_excerpt=\"none\" show_com=\"none\" show_date=\"\" show_author=\"eyJwb3J0cmFpdCI6Im5vbmUifQ==\" mm_sub_align_horiz=\"content-horiz-right\" mm_elem_align_horiz=\"content-horiz-right\" inline=\"yes\" tds_menu_active1-line_height=\"0\" menu_id=\"ddd_td-demo-header-menu_ddd\" f_elem_font_family=\"712\" f_elem_font_weight=\"eyJhbGwiOiI1MDAiLCJsYW5kc2NhcGUiOiI0MDAiLCJwb3J0cmFpdCI6IjQwMCJ9\" f_elem_font_size=\"eyJhbGwiOiIxNCIsInBvcnRyYWl0IjoiMTIiLCJsYW5kc2NhcGUiOiIxMyJ9\" elem_padd=\"eyJhbGwiOiIwIDEycHgiLCJsYW5kc2NhcGUiOiIwIDhweCIsInBvcnRyYWl0IjoiMCA2cHgifQ==\" mm_align_screen=\"yes\" f_title_font_family=\"712\" f_title_font_weight=\"\" f_ex_font_family=\"\" f_title_font_size=\"eyJhbGwiOiIxNiIsInBvcnRyYWl0IjoiMTMiLCJsYW5kc2NhcGUiOiIxNCJ9\" image_height=\"66\" m_bg=\"#ffffff\" art_title=\"eyJwb3J0cmFpdCI6IjJweCAwIDZweCAwIiwiYWxsIjoiMXB4IDAgNHB4IDAifQ==\" h_effect=\"\" meta_info_horiz=\"content-horiz-left\" f_sub_elem_font_family=\"712\" f_mm_sub_font_family=\"712\" mm_elem_color_a=\"#266fef\" title_txt_hover=\"#266fef\" tds_menu_sub_active1-sub_text_color_h=\"#266fef\" f_sub_elem_font_transform=\"\" f_sub_elem_font_size=\"eyJhbGwiOiIxMyIsInBvcnRyYWl0IjoiMTEifQ==\" f_sub_elem_font_weight=\"\" sub_elem_padd=\"eyJhbGwiOiI0cHggMjhweCIsInBvcnRyYWl0IjoiNHB4IDI2cHgifQ==\" mm_subcats_border_color=\"rgba(10,0,0,0.05)\" mm_elem_bg=\"rgba(0,0,0,0)\" mm_elem_bg_a=\"rgba(0,0,0,0)\" mm_elem_border_color_a=\"rgba(0,0,0,0)\" pag_h_bg=\"#266fef\" pag_h_border=\"#266fef\" f_elem_font_line_height=\"48px\" f_title_font_transform=\"\" f_mm_sub_font_size=\"eyJsYW5kc2NhcGUiOiIxMSIsImFsbCI6IjEzIiwicG9ydHJhaXQiOiIxMSJ9\" mm_elem_padd=\"eyJwb3J0cmFpdCI6IjAgMjJweCIsImFsbCI6IjJweCAyMnB4In0=\" mm_sub_width=\"eyJsYW5kc2NhcGUiOiIxOTAiLCJwb3J0cmFpdCI6IjEyMCJ9\" modules_gap=\"eyJwb3J0cmFpdCI6IjE1IiwiYWxsIjoiMjAiLCJsYW5kc2NhcGUiOiIyMCJ9\" mm_padd=\"eyJwb3J0cmFpdCI6IjE1IiwiYWxsIjoiMzAiLCJsYW5kc2NhcGUiOiIyMCJ9\" mm_sub_padd=\"eyJwb3J0cmFpdCI6IjE1cHggMCJ9\" main_sub_icon_space=\"eyJwb3J0cmFpdCI6IjcifQ==\" tds_menu_sub_active1-sub_elem_bg_color_h=\"rgba(2,75,107,0.05)\" tdc_css=\"eyJhbGwiOnsiZGlzcGxheSI6IiJ9LCJwb3J0cmFpdCI6eyJtYXJnaW4tdG9wIjoiMSIsImRpc3BsYXkiOiIifSwicG9ydHJhaXRfbWF4X3dpZHRoIjoxMDE4LCJwb3J0cmFpdF9taW5fd2lkdGgiOjc2OH0=\" f_title_font_line_height=\"1.2\" tds_menu_sub_active=\"tds_menu_sub_active1\" sub_shadow_shadow_offset_horizontal=\"0\" main_sub_tdicon=\"td-icon-menu-down\" sep_color=\"#ebebeb\" f_cat_font_family=\"712\" f_cat_font_weight=\"400\" f_cat_font_transform=\"\" f_cat_font_size=\"11\" modules_category_padding=\"6px 0\" f_meta_font_family=\"712\" f_meta_font_weight=\"400\" f_meta_font_size=\"11\" mm_shadow_shadow_size=\"0\" mm_shadow_shadow_offset_vertical=\"0\" f_mm_sub_font_weight=\"400\" f_mm_sub_font_transform=\"\" mm_elem_color=\"#919191\" sub_shadow_shadow_size=\"1\" sub_align_horiz=\"content-horiz-left\" sub_icon_pos=\"\" sub_icon_space=\"7\" sub_icon_size=\"10\" sub_shadow_shadow_color=\"rgba(0,0,0,0.14)\" f_elem_font_transform=\"none\" tds_menu_active=\"tds_menu_active1\" title_txt=\"#051d2d\" mm_width=\"1402\" f_cat_font_line_height=\"1\" sub_padd=\"18px 0\" sub_text_color=\"#919191\" sub_rest_top=\"-18\" main_sub_icon_size=\"eyJhbGwiOiI4IiwibGFuZHNjYXBlIjoiOCIsInBvcnRyYWl0IjoiNiJ9\" main_sub_icon_align=\"0\" sub_icon_align=\"eyJhbGwiOjIsInBvcnRyYWl0IjoiMyJ9\" show_cat=\"\" cat_bg=\"rgba(0,0,0,0)\" cat_txt=\"#666666\" mm_subcats_bg=\"#ffffff\" cat_txt_hover=\"#000000\" author_txt=\"#666666\" author_txt_hover=\"#000000\" tds_menu_active1-text_color_h=\"#266fef\" sub_shadow_shadow_offset_vertical=\"0\"][tdb_header_search results_msg_align=\"content-horiz-center\" image_floated=\"float_left\" image_size=\"td_324x400\" show_btn=\"none\" show_date=\"\" show_review=\"none\" show_com=\"none\" show_excerpt=\"none\" show_author=\"\" meta_padding=\"0 0 0 16px\" all_modules_space=\"eyJhbGwiOiIxMHB4IiwibGFuZHNjYXBlIjoiMTBweCIsInBvcnRyYWl0IjoiMTBweCJ9\" form_padding=\"eyJhbGwiOiIzMHB4IiwibGFuZHNjYXBlIjoiMjBweCIsInBvcnRyYWl0IjoiMjBweCJ9\" form_border=\"0\" form_align=\"content-horiz-right\" results_padding=\"eyJhbGwiOiIwIDMwcHggMzBweCIsImxhbmRzY2FwZSI6IjAgMjBweCAyMHB4ICIsInBvcnRyYWl0IjoiMCAyMHB4IDIwcHgifQ==\" results_border=\"0 0 1px 0\" results_msg_padding=\"eyJhbGwiOiIxMHB4IDAiLCJsYW5kc2NhcGUiOiI2cHggMCIsInBvcnRyYWl0IjoiNHB4IDAifQ==\" modules_divider=\"\" modules_divider_color=\"rgba(127,127,127,0.1)\" h_effect=\"\" image_height=\"100\" meta_info_horiz=\"content-horiz-left\" meta_info_align=\"\" results_msg_color=\"#266fef\" f_title_font_size=\"14\" f_title_font_weight=\"500\" modules_category=\"above\" mc1_el=\"16\" f_title_font_line_height=\"1.2\" btn_tdicon=\"tdc-font-tdmp tdc-font-tdmp-arrow-cut-right\" btn_icon_size=\"12\" btn_padding=\"eyJhbGwiOiI4cHggMTZweCIsInBvcnRyYWl0IjoiNnB4IDE2cHgifQ==\" btn_icon_space=\"10\" input_border_color=\"rgba(0,0,0,0.05)\" btn_shadow_shadow_color=\"rgba(0,0,0,0.39)\" btn_icon_pos=\"after\" inline=\"yes\" input_padding=\"0\" title_txt_hover=\"#266fef\" form_width=\"700\" f_input_font_family=\"712\" f_placeholder_font_family=\"712\" f_title_font_family=\"712\" f_title_font_transform=\"\" f_btn_font_family=\"712\" f_btn_font_transform=\"\" f_btn_font_weight=\"400\" cat_txt_hover=\"#000000\" image_width=\"27\" tdicon=\"td-icon-magnifier-big-rounded\" icon_color_h=\"#266fef\" arrow_color=\"#d6d6d6\" ex_txt=\"#a5a5a5\" mc1_tl=\"16\" toggle_txt_pos=\"\" toggle_txt_color=\"#000000\" icon_padding=\"eyJhbGwiOiIyLjQiLCJsYW5kc2NhcGUiOiIzIiwicG9ydHJhaXQiOiIzIn0=\" btn_bg_h=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjMTEwMDIxIiwiY29sb3IyIjoiIzA2MjYzYSIsIm1peGVkQ29sb3JzIjpbXSwiZGVncmVlIjoiLTMwIiwiY3NzIjoiYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoLTMwZGVnLCMwNjI2M2EsIzExMDAyMSk7YmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KC0zMGRlZywjMDYyNjNhLCMxMTAwMjEpOyIsImNzc1BhcmFtcyI6Ii0zMGRlZywjMDYyNjNhLCMxMTAwMjEifQ==\" form_shadow_shadow_size=\"1\" form_shadow_shadow_offset_vertical=\"0\" form_shadow_shadow_color=\"rgba(0,0,0,0.11)\" f_cat_font_family=\"712\" f_cat_font_weight=\"400\" f_cat_font_transform=\"\" f_meta_font_weight=\"400\" f_meta_font_family=\"712\" modules_category_padding=\"0 0 6px\" input_placeholder=\"type here...\" input_border=\"0 0 2px 0\" f_results_msg_font_family=\"712\" f_results_msg_font_transform=\"\" f_results_msg_font_weight=\"\" f_results_msg_font_style=\"normal\" f_placeholder_font_size=\"14\" f_placeholder_font_weight=\"400\" f_btn_font_size=\"14\" image_alignment=\"20\" f_input_font_size=\"14\" f_input_font_weight=\"400\" placeholder_opacity=\"0.01\" icon_size=\"eyJhbGwiOiIyMCIsInBvcnRyYWl0IjoiMTYiLCJsYW5kc2NhcGUiOiIxNiJ9\" float_block=\"yes\" title_txt=\"#051d2d\" cat_bg=\"rgba(0,0,0,0)\" f_ex_font_family=\"\" f_meta_font_size=\"11\" art_title=\"0 0 2px\" f_cat_font_size=\"11\" tdc_css=\"eyJwb3J0cmFpdCI6eyJtYXJnaW4tdG9wIjoiMSIsImRpc3BsYXkiOiIifSwicG9ydHJhaXRfbWF4X3dpZHRoIjoxMDE4LCJwb3J0cmFpdF9taW5fd2lkdGgiOjc2OH0=\" icon_color=\"#000000\" show_form=\"yes\" f_cat_font_line_height=\"1\" btn_bg=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjMjY2ZmVmIiwiY29sb3IyIjoiIzAwNGNmZiIsIm1peGVkQ29sb3JzIjpbXSwiY3NzIjoiYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoMGRlZywjMDA0Y2ZmLCMyNjZmZWYpO2JhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCMwMDRjZmYsIzI2NmZlZik7IiwiY3NzUGFyYW1zIjoiMGRlZywjMDA0Y2ZmLCMyNjZmZWYifQ==\" cat_txt=\"#666666\" modules_on_row=\"50%\" results_limit=\"6\" results_msg_color_h=\"#266fef\" author_txt=\"#666666\" author_txt_hover=\"#000000\"][tdb_header_user inline=\"yes\" show_log=\"\" login_tdicon=\"td-icon-user\" icon_space=\"eyJhbGwiOiI4IiwibGFuZHNjYXBlIjoiNSJ9\" icon_size=\"eyJhbGwiOiIxNiIsImxhbmRzY2FwZSI6IjEyIiwicG9ydHJhaXQiOiIxMiJ9\" f_usr_font_family=\"712\" f_log_font_family=\"712\" f_usr_font_size=\"eyJhbGwiOiIxNCIsInBvcnRyYWl0IjoiMTEiLCJsYW5kc2NhcGUiOiIxMyJ9\" f_log_font_size=\"eyJhbGwiOiIxNCIsInBvcnRyYWl0IjoiMTEiLCJsYW5kc2NhcGUiOiIxMyJ9\" f_log_font_transform=\"\" f_log_font_weight=\"eyJhbGwiOiI1MDAiLCJsYW5kc2NhcGUiOiI0MDAifQ==\" usr_color_h=\"#266fef\" log_color_h=\"#266fef\" tdc_css=\"eyJhbGwiOnsibWFyZ2luLXJpZ2h0IjoiMTAiLCJkaXNwbGF5IjoiIn0sInBvcnRyYWl0Ijp7Im1hcmdpbi1sZWZ0IjoiMTQiLCJkaXNwbGF5Ijoibm9uZSJ9LCJwb3J0cmFpdF9tYXhfd2lkdGgiOjEwMTgsInBvcnRyYWl0X21pbl93aWR0aCI6NzY4LCJsYW5kc2NhcGUiOnsibWFyZ2luLXJpZ2h0IjoiMCIsImRpc3BsYXkiOiIifSwibGFuZHNjYXBlX21heF93aWR0aCI6MTE0MCwibGFuZHNjYXBlX21pbl93aWR0aCI6MTAxOX0=\" f_usr_font_weight=\"eyJhbGwiOiI1MDAiLCJsYW5kc2NhcGUiOiI0MDAifQ==\" f_log_font_line_height=\"eyJhbGwiOiI0OHB4IiwicG9ydHJhaXQiOiIzMXB4In0=\" f_usr_font_line_height=\"eyJhbGwiOiI0OHB4IiwicG9ydHJhaXQiOiIzMXB4In0=\" float_right=\"yes\" f_usr_font_transform=\"\" photo_radius=\"50\" photo_space=\"10\" links_space=\"eyJhbGwiOiI4IiwibGFuZHNjYXBlIjoiNSJ9\" logout_tdicon=\"td-icon-vertical-line\"][/vc_column][/vc_row][/tdc_zone]","tdc_header_mobile":"[tdc_zone type=\"tdc_header_mobile_sticky\" tdc_css=\"eyJwaG9uZSI6eyJiYWNrZ3JvdW5kLWNvbG9yIjoiI2ZmZmZmZiIsImRpc3BsYXkiOiIifSwicGhvbmVfbWF4X3dpZHRoIjo3Njd9\" zone_shadow_shadow_size=\"eyJwaG9uZSI6IjEifQ==\" zone_shadow_shadow_offset_vertical=\"eyJwaG9uZSI6IjEifQ==\" zone_shadow_shadow_spread=\"eyJwaG9uZSI6IjEifQ==\"][vc_row row_bg_gradient=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjZmYwMDAwIiwiY29sb3IyIjoiIzFlNzNiZSIsIm1peGVkQ29sb3JzIjpbeyJjb2xvciI6IiMxZTczYmUiLCJwZXJjZW50YWdlIjozNH0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjozNH0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjo2N30seyJjb2xvciI6IiNkZDMzMzMiLCJwZXJjZW50YWdlIjo2N31dLCJkZWdyZWUiOiItOTAiLCJjc3MiOiJiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgtOTBkZWcsIzFlNzNiZSwjMWU3M2JlIDM0JSwjZWVlZTIyIDM0JSwjZWVlZTIyIDY3JSwjZGQzMzMzIDY3JSwjZmYwMDAwKTtiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTkwZGVnLCMxZTczYmUsIzFlNzNiZSAzNCUsI2VlZWUyMiAzNCUsI2VlZWUyMiA2NyUsI2RkMzMzMyA2NyUsI2ZmMDAwMCk7IiwiY3NzUGFyYW1zIjoiLTkwZGVnLCMxZTczYmUsIzFlNzNiZSAzNCUsI2VlZWUyMiAzNCUsI2VlZWUyMiA2NyUsI2RkMzMzMyA2NyUsI2ZmMDAwMCJ9\" full_width=\"stretch_row_content td-stretch-content\"][vc_column][vc_empty_space height=\"4px\"][/vc_column][/vc_row][vc_row full_width=\"stretch_row_1400 td-stretch-content\"][vc_column][tdb_mobile_search inline=\"yes\" float_right=\"yes\" tdicon=\"td-icon-magnifier-big-rounded\" icon_color=\"#000000\" icon_size=\"eyJhbGwiOjIyLCJwaG9uZSI6IjIwIn0=\" tdc_css=\"eyJwaG9uZSI6eyJtYXJnaW4tcmlnaHQiOiItMTIiLCJkaXNwbGF5IjoiIn0sInBob25lX21heF93aWR0aCI6NzY3fQ==\"][tdb_mobile_menu inline=\"yes\" menu_id=\"ddd_td-demo-header-menu_ddd\" tdicon=\"td-icon-menu-thin\" icon_color=\"#000000\" icon_padding=\"eyJhbGwiOjIsInBob25lIjoiMS42In0=\" tdc_css=\"eyJwaG9uZSI6eyJtYXJnaW4tdG9wIjoiMyIsIm1hcmdpbi1sZWZ0IjoiLTEyIiwiZGlzcGxheSI6IiJ9LCJwaG9uZV9tYXhfd2lkdGgiOjc2N30=\"][tdb_header_logo tagline=\"bmV3cw==\" align_vert=\"content-vert-center\" tagline_pos=\"eyJhbGwiOiJpbmxpbmUiLCJwaG9uZSI6IiJ9\" tagline_align_vert=\"content-vert-center\" f_tagline_font_family=\"712\" f_text_font_family=\"712\" f_text_font_weight=\"eyJwaG9uZSI6IjQwMCJ9\" f_tagline_font_weight=\"eyJwaG9uZSI6IjMwMCJ9\" icon_pos=\"\" text=\"romania\" tagline_align_horiz=\"content-horiz-left\" show_tagline=\"\" f_text_font_style=\"\" f_text_font_transform=\"\" f_tagline_font_transform=\"\" align_horiz=\"content-horiz-left\" tdicon=\"td-icon-xing\" icon_color=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjZmYwMDAwIiwiY29sb3IyIjoiIzFlNzNiZSIsIm1peGVkQ29sb3JzIjpbeyJjb2xvciI6IiMxZTczYmUiLCJwZXJjZW50YWdlIjozNH0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjozNX0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjo2N30seyJjb2xvciI6IiNkZDMzMzMiLCJwZXJjZW50YWdlIjo2N31dLCJkZWdyZWUiOiIwIiwiY3NzIjoiYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoMGRlZywjMWU3M2JlLCMxZTczYmUgMzQlLCNlZWVlMjIgMzUlLCNlZWVlMjIgNjclLCNkZDMzMzMgNjclLCNmZjAwMDApO2JhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCMxZTczYmUsIzFlNzNiZSAzNCUsI2VlZWUyMiAzNSUsI2VlZWUyMiA2NyUsI2RkMzMzMyA2NyUsI2ZmMDAwMCk7IiwiY3NzUGFyYW1zIjoiMGRlZywjMWU3M2JlLCMxZTczYmUgMzQlLCNlZWVlMjIgMzUlLCNlZWVlMjIgNjclLCNkZDMzMzMgNjclLCNmZjAwMDAifQ==\" icon_align=\"eyJhbGwiOjMsInBvcnRyYWl0IjoiMCIsImxhbmRzY2FwZSI6IjEiLCJwaG9uZSI6IjAifQ==\" icon_size=\"eyJwb3J0cmFpdCI6IjI4IiwiYWxsIjoiMzAiLCJsYW5kc2NhcGUiOiIyNCIsInBob25lIjoiMjgifQ==\" inline=\"yes\" tdc_css=\"eyJhbGwiOnsiZGlzcGxheSI6IiJ9LCJsYW5kc2NhcGUiOnsiZGlzcGxheSI6IiJ9LCJsYW5kc2NhcGVfbWF4X3dpZHRoIjoxMTQwLCJsYW5kc2NhcGVfbWluX3dpZHRoIjoxMDE5LCJwb3J0cmFpdCI6eyJkaXNwbGF5IjoiIn0sInBvcnRyYWl0X21heF93aWR0aCI6MTAxOCwicG9ydHJhaXRfbWluX3dpZHRoIjo3Njh9\" icon_space=\"eyJwb3J0cmFpdCI6IjUiLCJwaG9uZSI6IjUifQ==\" f_text_font_size=\"eyJwaG9uZSI6IjE2In0=\" f_text_font_line_height=\"eyJwaG9uZSI6IjEwcHgifQ==\" f_tagline_font_size=\"eyJwaG9uZSI6IjE2In0=\" f_tagline_font_line_height=\"eyJwaG9uZSI6IjEwcHgifQ==\" show_image=\"none\"][tdb_header_user inline=\"yes\" show_log=\"\" login_tdicon=\"td-icon-user\" icon_space=\"eyJhbGwiOiIxMCIsInBvcnRyYWl0IjoiMTAiLCJwaG9uZSI6IjgifQ==\" icon_size=\"eyJhbGwiOiIxNiIsImxhbmRzY2FwZSI6IjEyIiwicG9ydHJhaXQiOiIxMiIsInBob25lIjoiMTQifQ==\" f_usr_font_family=\"712\" f_log_font_family=\"712\" f_usr_font_size=\"eyJhbGwiOiIxMyIsInBvcnRyYWl0IjoiMTEiLCJsYW5kc2NhcGUiOiIxMyJ9\" f_log_font_size=\"eyJhbGwiOiIxMyIsInBvcnRyYWl0IjoiMTEiLCJsYW5kc2NhcGUiOiIxMyJ9\" f_log_font_transform=\"\" f_log_font_weight=\"400\" usr_color_h=\"#266fef\" log_color_h=\"#266fef\" tdc_css=\"eyJhbGwiOnsiZGlzcGxheSI6IiJ9LCJwb3J0cmFpdCI6eyJtYXJnaW4tbGVmdCI6IjE0IiwiZGlzcGxheSI6Im5vbmUifSwicG9ydHJhaXRfbWF4X3dpZHRoIjoxMDE4LCJwb3J0cmFpdF9taW5fd2lkdGgiOjc2OCwibGFuZHNjYXBlIjp7ImRpc3BsYXkiOiIifSwibGFuZHNjYXBlX21heF93aWR0aCI6MTE0MCwibGFuZHNjYXBlX21pbl93aWR0aCI6MTAxOX0=\" f_usr_font_weight=\"400\" f_log_font_line_height=\"eyJhbGwiOiI0OHB4IiwicG9ydHJhaXQiOiIzMXB4In0=\" f_usr_font_line_height=\"eyJhbGwiOiI0OHB4IiwicG9ydHJhaXQiOiIzMXB4In0=\" float_right=\"yes\" f_usr_font_transform=\"\" photo_radius=\"50\" photo_space=\"10\" links_space=\"eyJhbGwiOiIyMCIsInBob25lIjoiOCJ9\"][/vc_column][/vc_row][/tdc_zone]","tdc_header_mobile_sticky":"[tdc_zone type=\"tdc_header_mobile_sticky\" tdc_css=\"eyJwaG9uZSI6eyJiYWNrZ3JvdW5kLWNvbG9yIjoiI2ZmZmZmZiIsImRpc3BsYXkiOiIifSwicGhvbmVfbWF4X3dpZHRoIjo3Njd9\" ms_transition_effect=\"slide\" ms_sticky_type=\"smart_snap\" zone_shadow_shadow_size=\"eyJwaG9uZSI6IjEifQ==\" zone_shadow_shadow_offset_vertical=\"eyJwaG9uZSI6IjEifQ==\" zone_shadow_shadow_spread=\"eyJwaG9uZSI6IjEifQ==\"][vc_row row_bg_gradient=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjZmYwMDAwIiwiY29sb3IyIjoiIzFlNzNiZSIsIm1peGVkQ29sb3JzIjpbeyJjb2xvciI6IiMxZTczYmUiLCJwZXJjZW50YWdlIjozNH0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjozNH0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjo2N30seyJjb2xvciI6IiNkZDMzMzMiLCJwZXJjZW50YWdlIjo2N31dLCJkZWdyZWUiOiItOTAiLCJjc3MiOiJiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgtOTBkZWcsIzFlNzNiZSwjMWU3M2JlIDM0JSwjZWVlZTIyIDM0JSwjZWVlZTIyIDY3JSwjZGQzMzMzIDY3JSwjZmYwMDAwKTtiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTkwZGVnLCMxZTczYmUsIzFlNzNiZSAzNCUsI2VlZWUyMiAzNCUsI2VlZWUyMiA2NyUsI2RkMzMzMyA2NyUsI2ZmMDAwMCk7IiwiY3NzUGFyYW1zIjoiLTkwZGVnLCMxZTczYmUsIzFlNzNiZSAzNCUsI2VlZWUyMiAzNCUsI2VlZWUyMiA2NyUsI2RkMzMzMyA2NyUsI2ZmMDAwMCJ9\" full_width=\"stretch_row_content td-stretch-content\"][vc_column][vc_empty_space height=\"4px\"][/vc_column][/vc_row][vc_row full_width=\"stretch_row_1400 td-stretch-content\"][vc_column][tdb_mobile_search inline=\"yes\" float_right=\"yes\" tdicon=\"td-icon-magnifier-big-rounded\" icon_color=\"#000000\" icon_size=\"eyJhbGwiOjIyLCJwaG9uZSI6IjIwIn0=\" tdc_css=\"eyJwaG9uZSI6eyJtYXJnaW4tcmlnaHQiOiItMTIiLCJkaXNwbGF5IjoiIn0sInBob25lX21heF93aWR0aCI6NzY3fQ==\"][tdb_mobile_menu inline=\"yes\" menu_id=\"ddd_td-demo-header-menu_ddd\" tdicon=\"td-icon-menu-thin\" icon_color=\"#000000\" icon_padding=\"eyJhbGwiOjIsInBob25lIjoiMS42In0=\" tdc_css=\"eyJwaG9uZSI6eyJtYXJnaW4tdG9wIjoiMyIsIm1hcmdpbi1sZWZ0IjoiLTEyIiwiZGlzcGxheSI6IiJ9LCJwaG9uZV9tYXhfd2lkdGgiOjc2N30=\"][tdb_header_logo tagline=\"bmV3cw==\" align_vert=\"content-vert-center\" tagline_pos=\"eyJhbGwiOiJpbmxpbmUiLCJwaG9uZSI6IiJ9\" tagline_align_vert=\"content-vert-center\" f_tagline_font_family=\"712\" f_text_font_family=\"712\" f_text_font_weight=\"eyJwaG9uZSI6IjQwMCJ9\" f_tagline_font_weight=\"eyJwaG9uZSI6IjMwMCJ9\" icon_pos=\"\" text=\"romania\" tagline_align_horiz=\"content-horiz-left\" show_tagline=\"\" f_text_font_style=\"\" f_text_font_transform=\"\" f_tagline_font_transform=\"\" align_horiz=\"content-horiz-left\" tdicon=\"td-icon-xing\" icon_color=\"eyJ0eXBlIjoiZ3JhZGllbnQiLCJjb2xvcjEiOiIjZmYwMDAwIiwiY29sb3IyIjoiIzFlNzNiZSIsIm1peGVkQ29sb3JzIjpbeyJjb2xvciI6IiMxZTczYmUiLCJwZXJjZW50YWdlIjozNH0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjozNX0seyJjb2xvciI6IiNlZWVlMjIiLCJwZXJjZW50YWdlIjo2N30seyJjb2xvciI6IiNkZDMzMzMiLCJwZXJjZW50YWdlIjo2N31dLCJkZWdyZWUiOiIwIiwiY3NzIjoiYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoMGRlZywjMWU3M2JlLCMxZTczYmUgMzQlLCNlZWVlMjIgMzUlLCNlZWVlMjIgNjclLCNkZDMzMzMgNjclLCNmZjAwMDApO2JhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgwZGVnLCMxZTczYmUsIzFlNzNiZSAzNCUsI2VlZWUyMiAzNSUsI2VlZWUyMiA2NyUsI2RkMzMzMyA2NyUsI2ZmMDAwMCk7IiwiY3NzUGFyYW1zIjoiMGRlZywjMWU3M2JlLCMxZTczYmUgMzQlLCNlZWVlMjIgMzUlLCNlZWVlMjIgNjclLCNkZDMzMzMgNjclLCNmZjAwMDAifQ==\" icon_align=\"eyJhbGwiOjMsInBvcnRyYWl0IjoiMCIsImxhbmRzY2FwZSI6IjEiLCJwaG9uZSI6IjAifQ==\" icon_size=\"eyJwb3J0cmFpdCI6IjI4IiwiYWxsIjoiMzAiLCJsYW5kc2NhcGUiOiIyNCIsInBob25lIjoiMjgifQ==\" inline=\"yes\" tdc_css=\"eyJhbGwiOnsiZGlzcGxheSI6IiJ9LCJsYW5kc2NhcGUiOnsiZGlzcGxheSI6IiJ9LCJsYW5kc2NhcGVfbWF4X3dpZHRoIjoxMTQwLCJsYW5kc2NhcGVfbWluX3dpZHRoIjoxMDE5LCJwb3J0cmFpdCI6eyJkaXNwbGF5IjoiIn0sInBvcnRyYWl0X21heF93aWR0aCI6MTAxOCwicG9ydHJhaXRfbWluX3dpZHRoIjo3Njh9\" icon_space=\"eyJwb3J0cmFpdCI6IjUiLCJwaG9uZSI6IjUifQ==\" f_text_font_size=\"eyJwaG9uZSI6IjE2In0=\" f_text_font_line_height=\"eyJwaG9uZSI6IjEwcHgifQ==\" f_tagline_font_size=\"eyJwaG9uZSI6IjE2In0=\" f_tagline_font_line_height=\"eyJwaG9uZSI6IjEwcHgifQ==\" show_image=\"none\"][tdb_header_user inline=\"yes\" show_log=\"\" login_tdicon=\"td-icon-user\" icon_space=\"eyJhbGwiOiIxMCIsInBvcnRyYWl0IjoiMTAiLCJwaG9uZSI6IjgifQ==\" icon_size=\"eyJhbGwiOiIxNiIsImxhbmRzY2FwZSI6IjEyIiwicG9ydHJhaXQiOiIxMiIsInBob25lIjoiMTQifQ==\" f_usr_font_family=\"712\" f_log_font_family=\"712\" f_usr_font_size=\"eyJhbGwiOiIxMyIsInBvcnRyYWl0IjoiMTEiLCJsYW5kc2NhcGUiOiIxMyJ9\" f_log_font_size=\"eyJhbGwiOiIxMyIsInBvcnRyYWl0IjoiMTEiLCJsYW5kc2NhcGUiOiIxMyJ9\" f_log_font_transform=\"\" f_log_font_weight=\"400\" usr_color_h=\"#266fef\" log_color_h=\"#266fef\" tdc_css=\"eyJhbGwiOnsiZGlzcGxheSI6IiJ9LCJwb3J0cmFpdCI6eyJtYXJnaW4tbGVmdCI6IjE0IiwiZGlzcGxheSI6Im5vbmUifSwicG9ydHJhaXRfbWF4X3dpZHRoIjoxMDE4LCJwb3J0cmFpdF9taW5fd2lkdGgiOjc2OCwibGFuZHNjYXBlIjp7ImRpc3BsYXkiOiIifSwibGFuZHNjYXBlX21heF93aWR0aCI6MTE0MCwibGFuZHNjYXBlX21pbl93aWR0aCI6MTAxOX0=\" f_usr_font_weight=\"400\" f_log_font_line_height=\"eyJhbGwiOiI0OHB4IiwicG9ydHJhaXQiOiIzMXB4In0=\" f_usr_font_line_height=\"eyJhbGwiOiI0OHB4IiwicG9ydHJhaXQiOiIzMXB4In0=\" float_right=\"yes\" f_usr_font_transform=\"\" photo_radius=\"50\" photo_space=\"10\" links_space=\"eyJhbGwiOiIyMCIsInBob25lIjoiOCJ9\"][/vc_column][/vc_row][/tdc_zone]"}